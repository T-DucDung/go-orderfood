swagger: "2.0"
info: {}
basePath: /v1
paths:
  /statistic/:
    get:
      tags:
      - statistic
      summary: '"Get thống kê "'
      description: Get Statictic
      operationId: StatisticController.Get Statictic
      parameters:
      - in: header
        name: auth
        description: token
        required: true
        type: string
      - in: query
        name: startTime
        description: start time
        type: integer
        format: int64
      - in: query
        name: endTime
        description: end time
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/responses.ResStatistic'
        "404":
          description: responses.ResStatistic
  /statisticstore/:
    get:
      tags:
      - statisticstore
      summary: '"Get thống kê một cửa hàng"'
      description: Get Statictic Store
      operationId: StatisticStoreController.Get Statictic Store
      parameters:
      - in: header
        name: auth
        description: token
        required: true
        type: string
      - in: query
        name: startTime
        description: start time
        type: integer
        format: int64
      - in: query
        name: endTime
        description: end time
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/responses.ResStatisticStore'
        "404":
          description: responses.ResStatisticStore
  /user/:
    post:
      tags:
      - user
      summary: '"Login"'
      description: Login
      operationId: UserController.Login
      parameters:
      - in: body
        name: username
        description: "true"
        schema:
          $ref: '#/definitions/models.Authorize'
      responses:
        "200":
          description: ""
        "404":
          description: ""
definitions:
  models.Authorize:
    title: Authorize
    type: object
    properties:
      password:
        type: string
      username:
        type: string
  models.BestSellingFoods:
    title: BestSellingFoods
    type: object
    properties:
      food_id:
        type: string
      food_name:
        type: string
      total_count:
        type: string
  models.LoyalCustomers:
    title: LoyalCustomers
    type: object
    properties:
      customers_id:
        type: string
      customers_name:
        type: string
      total_count:
        type: string
  models.Statistic:
    title: Statistic
    type: object
    properties:
      Revenue:
        type: string
      StatisticAllStore:
        type: array
        items:
          $ref: '#/definitions/models.StatisticStore'
      TotalCustomer:
        type: string
      TotalOrder:
        type: string
      TotalShipper:
        type: string
      TotalShop:
        type: string
  models.StatisticStore:
    title: StatisticStore
    type: object
    properties:
      best_selling_foods:
        type: array
        items:
          $ref: '#/definitions/models.BestSellingFoods'
      id:
        type: string
      loyal_customers_name:
        type: array
        items:
          $ref: '#/definitions/models.LoyalCustomers'
      name:
        type: string
      number_of_orders:
        type: string
      rate_avg:
        type: string
      revenue:
        type: string
  responses.Err:
    title: Err
    type: object
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  responses.ResStatistic:
    title: ResStatistic
    type: object
    properties:
      data:
        $ref: '#/definitions/models.Statistic'
      error:
        $ref: '#/definitions/responses.Err'
  responses.ResStatisticStore:
    title: ResStatisticStore
    type: object
    properties:
      data:
        $ref: '#/definitions/models.StatisticStore'
      error:
        $ref: '#/definitions/responses.Err'
